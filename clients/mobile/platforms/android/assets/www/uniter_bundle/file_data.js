module.exports = {"app/Index/Controller/IndexController.fephp":"<?php\n\nNamespace Controller ;\n\nclass IndexController extends \\Controller\\Base {\n\n    public function execute($pageVars) {\n        $page_model = new \\Model\\Index\\PageModel() ;\n        $page = $page_model->getPage() ;\n        \\ISOPHP\\js_core::$console->log('ICP', $page) ;\n        $res = new \\Controller\\Result() ;\n        $res->page = $page ;\n        $res->view = 'index.phptpl' ;\n        $res->type = 'view' ;\n        $res->view_control = 'Index' ;\n        $res->post_template[] = $page_model->bindButtons() ;\n        \\ISOPHP\\js_core::$console->log('Ind Con', $res) ;\n        return $res ;\n    }\n\n}","app/Index/Model/IndexPageModel.fephp":"<?php\n\nNamespace Model\\Index ;\n\nclass PageModel extends \\Model\\Base {\n\n    public function getPage() {\n        $page = array() ;\n        $page['title'] = 'A title for an index page' ;\n        $page['heading'] = 'A heading for an index page' ;\n        \\ISOPHP\\js_core::$console->log('Ind Page Mod', $page) ;\n        return $page ;\n    }\n\n    public static function bindButtons() {\n        return function () {\n            \\ISOPHP\\js_core::$console->log('Binding buttons') ;\n            $jQuery = \\ISOPHP\\js_core::$jQuery ;\n            $go_landing_page = $jQuery('#go-landing-page') ;\n            $go_landing_page->on('click', function () {\n                $navigate = new \\Model\\Navigate() ;\n                $navigate->route('LandingPage', 'show') ;\n            }) ;\n        } ;\n    }\n\n}","app/Index/View/IndexView.fephp":"<?php\n\nNamespace View ;\n\nclass IndexView extends \\Core\\View {\n\n    public function display($data) {\n//        \\ISOPHP\\js_core::$console->log('data', $data ) ;\n        $jQuery =  \\ISOPHP\\js_core::$jQuery ;\n        \\ISOPHP\\js_core::$window->document->title = 'Index' ;\n        $tplfunc = \\Core\\View::$template ;\n        $tpl_data = $tplfunc() ;\n//        \\ISOPHP\\js_core::$console->log('davey ravey don', $tpl_data) ;\n        $jQuery('#template')->html($tpl_data) ;\n        $jQuery('.app-loader')->css('display', 'none') ;\n    }\n\n}","app/LandingPage/Controller/LandingPageController.fephp":"<?php\n\nNamespace Controller ;\n\nclass LandingPageController extends \\Controller\\Base {\n\n    public function execute($pageVars) {\n        $page_model = new \\Model\\LandingPage\\PageModel() ;\n        $page = $page_model->getPage() ;\n        \\ISOPHP\\js_core::$console->log('ICP', $page) ;\n        $res = new \\Controller\\Result() ;\n        $res->page = $page ;\n        $res->view = 'LandingPage.phptpl' ;\n        $res->type = 'view' ;\n        $res->view_control = 'LandingPage' ;\n        $res->post_template[] = $page_model->bindButtons() ;\n        \\ISOPHP\\js_core::$console->log('LandingPage Con', $res) ;\n        return $res ;\n    }\n\n}","app/LandingPage/Model/LandingPagePageModel.fephp":"<?php\n\nNamespace Model\\LandingPage ;\n\nclass PageModel extends \\Model\\Base {\n\n    public function getPage() {\n        $page = array() ;\n        $page['title'] = 'A title for a Landing Page' ;\n        $page['heading'] = 'A heading for an Landing page' ;\n        \\ISOPHP\\js_core::$console->log('Landing Page Mod', $page) ;\n        return $page ;\n    }\n\n    public static function bindButtons() {\n        return function () {\n            \\ISOPHP\\js_core::$console->log('Binding buttons') ;\n            $jQuery = \\ISOPHP\\js_core::$jQuery ;\n            $go_landing_page = $jQuery('#go-index-page') ;\n            $go_landing_page->on('click', function () {\n                $navigate = new \\Model\\Navigate() ;\n                $navigate->route('Index', 'index') ;\n            }) ;\n        } ;\n    }\n\n}","app/LandingPage/View/LandingPageView.fephp":"<?php\n\nNamespace View ;\n\nclass LandingPageView extends \\Core\\View {\n\n    public function display($data) {\n//        \\ISOPHP\\js_core::$console->log('data', $data ) ;\n        $jQuery =  \\ISOPHP\\js_core::$jQuery ;\n        \\ISOPHP\\js_core::$window->document->title = 'Landing Page' ;\n        $tplfunc = \\Core\\View::$template ;\n        $tpl_data = $tplfunc() ;\n//        \\ISOPHP\\js_core::$console->log('davey ravey don', $tpl_data) ;\n        $jQuery('#template')->html($tpl_data) ;\n        $jQuery('.app-loader')->css('display', 'none') ;\n    }\n\n}","app/ListEvents/Controller/ListEventsController.fephp":"<?php\n/**\n * Created by PhpStorm.\n * User: pharaoh\n * Date: 06/06/17\n * Time: 15:16\n */","app/ListEvents/Model/ListEventsModel.fephp":"<?php\n/**\n * Created by PhpStorm.\n * User: pharaoh\n * Date: 06/06/17\n * Time: 15:16\n */","app/Index/View/desktop/Index.phptpl":"<?php\n\n\\Core\\View::$template = function() {\n    $html = '\n    <form id=\"pharaoh_form\">\n        <div id=\"page_wrapper\">\n            <h1>The Desktop Application Template</h1>\n        </div>\n    </form> ' ;\n\n    for ($i=0; $i<20; $i++) {\n        $html = $html . \"Dave $i; \" ;\n    }\n\n    $html = $html . '<span id=\"go-landing-page\" class=\"btn btn-success\">Landing Page</span>' ;\n    return $html ;\n\n} ;","app/Index/View/mobile/Index.phptpl":"<?php\n\n\\Core\\View::$template = function() {\n    $html = '\n    <form id=\"pharaoh_form\">\n        <h1>The Mobile Application Index Page</h1> ' ;\n\n    for ($i=0; $i<20; $i++) {\n        $html = $html . \"Dave $i; \" ;\n    }\n\n    $html = $html . '<span id=\"go-landing-page\" class=\"btn btn-success\">Landing Page</span>' ;\n    $html = $html . '</form>' ;\n    return $html ;\n\n} ;","app/Index/View/web/Index.phptpl":"<?php\n\n\\Core\\View::$template = function() {\n    $html = '\n    <form id=\"pharaoh_form\">\n        <h1>The Web Application Index Page</h1> ' ;\n\n    for ($i=0; $i<20; $i++) {\n        $html = $html . \"Dave $i; \" ;\n    }\n\n    $html = $html . '<span id=\"go-landing-page\" class=\"btn btn-success\">Landing Page</span>' ;\n    $html = $html . '</form>' ;\n    return $html ;\n\n} ;","app/Index/View/Index.phptpl":"<?php\n\n\\Core\\View::$template = function() {\n    $html = '\n        <form id=\"pharaoh_form\">\n            <div id=\"page_wrapper\">\n                <h1>Template for anything default</h1>\n            </div>\n        </form> ' ;\n    return $html ;\n} ;\n","app/LandingPage/View/LandingPage.phptpl":"<?php\n\n\\Core\\View::$template = function() {\n    $html = '\n    <form id=\"pharaoh_form\">\n        <h1>The Generic Application Landing Page</h1> ' ;\n\n    $html = $html . '<span id=\"go-index-page\" class=\"btn btn-success\">Home Page</span>' ;\n    $html = $html . '</form>' ;\n    return $html ;\n\n} ;","core/bootstrap.fephp":"<?php\n\nNamespace Core;\n\nclass BootStrap {\n\n    private static $exitCode ;\n\n    public static function setExitCode($exitCode){\n        self::$exitCode = $exitCode ;\n    }\n\n    public static function getExitCode(){\n        return (is_null(self::$exitCode)) ? 0 : self::$exitCode ;\n    }\n\n    public function main($argv_or_boot_params_null) {\n        \\ISOPHP\\js_core::$console->log('bootstrap main', $argv_or_boot_params_null) ;\n        $routeObject = new \\Core\\Router();\n        $route = $routeObject->run($argv_or_boot_params_null);\n        $emptyPageVars = array(\"messages\"=>array(), \"route\"=>$route);\n        \\ISOPHP\\js_core::$console->log('current route is', $route, $emptyPageVars) ;\n        $this->executeControl($route[\"control\"], $emptyPageVars);\n    }\n\n    public function executeControl($controlToExecute, $pageVars=null) {\n//        \\ISOPHP\\js_core::$console->log('control class loading') ;\n        $control = new \\Core\\Control();\n//        \\ISOPHP\\js_core::$console->log('control class loaded', $control) ;\n        $controlResult = $control->executeControl($controlToExecute, $pageVars);\n//        \\ISOPHP\\js_core::$console->log('control res 1', $controlResult) ;\n        if ($controlResult->type == \"view\") {\n            $viewClass = '\\View\\\\'.$controlResult->view_control.'View' ;\n//            \\ISOPHP\\js_core::$console->log('View Class Name Is:', $viewClass) ;\n            $view =  new $viewClass() ;\n            $view->executeView($controlResult->view_control, $controlResult->view, $controlResult->page);\n            if (isset($controlResult->post_template)) {\n                \\ISOPHP\\js_core::$console->log('post template is set', $controlResult->post_template) ;\n                foreach ($controlResult->post_template as $post_template_method) {\n                    $post_template_method() ;\n                }\n\n            }\n        }\n        else if ($controlResult->type == \"control\") {\n//            \\ISOPHP\\js_core::$console->log('control res 2', $controlResult) ;\n            $this->executeControl( $controlResult->control, $controlResult->page );\n        }\n    }\n\n}","core/constants.fephp":"<?php\ndefine('CURRENT_TARGET', \"mobile\") ;","core/electron.fephp":"<?php\n\nNamespace ISOPHP ;\n\nclass electron {\n    public static $app ;\n    public static $BrowserWindow ;\n    public static function application_controls($BrowserWindow) {\n        \\ISOPHP\\js_core::$console->log(\"app controls\") ;\n        \\ISOPHP\\js_core::$console->log(\"application controls inititialized\") ;\n        \\ISOPHP\\js_core::$window->document->getElementById(\"btn-min\")->addEventListener(\"click\", function () use ($BrowserWindow)  {\n            $window = $BrowserWindow->getCurrentWindow();\n            $window->minimize();\n        });\n\n        \\ISOPHP\\js_core::$window->document->getElementById(\"btn-max\")->addEventListener(\"click\", function () use ($BrowserWindow)  {\n            $window = $BrowserWindow->getCurrentWindow();\n            $window->maximize();\n        });\n\n        \\ISOPHP\\js_core::$window->document->getElementById(\"btn-close\")->addEventListener(\"click\", function () use ($BrowserWindow)  {\n            $window = $BrowserWindow->getCurrentWindow();\n            $window->close();\n        });\n    }\n}","core/index.fephp":"<?php\n\n\n$console->log('In the applications index file') ;\n$console->log($_REQUEST, $_SERVER) ;\n\n$route_set[] = isset($_REQUEST['control']) ;\n$route_set[] = isset($_REQUEST['action']) ;\n\nif ( $php->in_array(false, $route_set) ) {\n    $_REQUEST['control'] = \"Index\" ;\n    $_REQUEST['action'] = \"index\" ; }\n\nif (!isset($_REQUEST['output-format'])) {\n    $_REQUEST['output-format'] = \"HTML\"; }\n\n$cleo_vars = array();\n$cleo_vars[0] = __FILE__;\n$cleo_vars[1] = $_REQUEST['control'];\n$cleo_vars[2] = $_REQUEST['action'];\nforeach($_REQUEST as $post_key => $post_var) {\n    if (!$php->in_array($post_key, array('control', 'action'))) {\n        $cleo_vars[] = \"--$post_key=$_REQUEST[$post_key]\" ; } }\n$_ENV['bootstrap'] = $php->serialize($cleo_vars);\n\n$console->log($cleo_vars, $_ENV) ;\n\n$bootStrap = new \\Core\\BootStrap();\n\\ISOPHP\\core::$bootstrap = $bootStrap ;\n$argv_or_null = (isset($argv)) ? $argv : null ;\n$bootStrapParams = (isset($_ENV['bootstrap'])) ? $php->unserialize($_ENV['bootstrap']) : $argv_or_null ;\n\\ISOPHP\\core::$bootstrap->main($bootStrapParams);\n","core/init.fephp":"<?php\n\n\\ISOPHP\\core::$php = $php ;\n\\ISOPHP\\core::$file_index = $file_index ;\n\\ISOPHP\\js_core::$console = $console ;\n\\ISOPHP\\js_core::$window = $window ;\n\\ISOPHP\\js_core::$jQuery = $jQuery ;\n\nif (CURRENT_TARGET === 'desktop') {\n\n    $console->log(\"desktop init\") ;\n    $electron_app = $window->require('electron')->remote ;\n    \\ISOPHP\\electron::$BrowserWindow = $electron_app ;\n\n    \\ISOPHP\\js_core::$window->document->onreadystatechange = function () use ($electron_app) {\n        if (\\ISOPHP\\js_core::$window->document->readyState === \"complete\") {\n            \\ISOPHP\\electron::application_controls($electron_app);\n        }\n    } ;\n\n}\n\nfunction __autoload($classname) {\n    \\ISOPHP\\js_core::$console->log(\"Autoloading \" . $classname) ;\n    if ($classname === 'ISOPHP\\core') {\n        return ;\n    } else if ($classname === 'ISOPHP\\js_core') {\n        return ;\n    } else if ($classname === 'Controller\\Base') {\n        $path = '/core/Core/Base/Controller/Base.fephp' ;\n        require_once ($path) ;\n        return ;\n    } else if ($classname === 'Controller\\Result') {\n        $path = '/core/Core/Base/Controller/Result.fephp' ;\n        require_once ($path) ;\n        return ;\n    } else if ($classname === 'Model\\Base') {\n        $path = '/core/Core/Base/Model/Base.fephp' ;\n        require_once ($path) ;\n        return ;\n    } else if ($classname === 'Model\\Navigate') {\n        $path = '/core/Core/Base/Model/Navigate.fephp' ;\n        require_once ($path) ;\n        return ;\n    } else if ($classname === 'Info\\Base') {\n        $path = '/core/Core/Base/Info/Base.fephp' ;\n        require_once ($path) ;\n        return ;\n    } else if ($classname === 'stdClass') {\n        return ;\n    }\n    $parts = \\ISOPHP\\core::$php->explode('\\\\', $classname) ;\n    \\ISOPHP\\js_core::$console->log($parts) ;\n    if ($parts[0] === 'Core') {\n        \\ISOPHP\\js_core::$console->log('Looking in core') ;\n        if ($classname == 'Core\\Router') {\n            $path = '/core/Core/Router.fephp' ;\n        } else if ($classname == 'Core\\Control') {\n            $path = '/core/Core/Control.fephp' ;\n        } else if ($classname == 'Core\\View') {\n            $path = '/core/Core/View.fephp' ;\n        }\n        if (isset($path)) {\n            \\ISOPHP\\js_core::$console->log('found a path ' . $path) ;\n            require_once ($path) ;\n        }\n    }\n    else if ($parts[0] === 'Controller') {\n        \\ISOPHP\\js_core::$console->log('Looking in Controller') ;\n        $module = \\ISOPHP\\core::$php->str_replace('Controller', '', $parts[1]) ;\n        $path = '/app/'.$module.'/Controller/'.$parts[1].'.fephp' ;\n        if (isset($path)) {\n            \\ISOPHP\\js_core::$console->log('found a controller path ' . $path) ;\n            require_once ($path) ;\n        }\n    }\n    else if ($parts[0] === 'Model') {\n        \\ISOPHP\\js_core::$console->log('Looking in Model') ;\n        $module = \\ISOPHP\\core::$php->str_replace('Model', '', $parts[1]) ;\n        $path = '/app/'.$module.'/Model/'.$parts[1].$parts[2].'.fephp' ;\n        if (isset($path)) {\n            \\ISOPHP\\js_core::$console->log('found a model path ' . $path) ;\n            require_once ($path) ;\n        }\n    }\n    else if ($parts[0] === 'View') {\n        \\ISOPHP\\js_core::$console->log('Looking in View') ;\n        $module = \\ISOPHP\\core::$php->str_replace('View', '', $parts[1]) ;\n        $path = '/app/'.$module.'/View/'.$parts[1].'.fephp' ;\n        if (isset($path)) {\n            \\ISOPHP\\js_core::$console->log('found a view path ' . $path) ;\n            require_once ($path) ;\n        }\n    }\n\n}\n","core/isophp.fephp":"<?php\n\nNamespace ISOPHP ;\n\nclass core {\n    public static $bootstrap ;\n    public static $php ;\n    public static $file_index ;\n}\n\nclass js_core {\n    public static $console ;\n    public static $window ;\n    public static $jQuery ;\n}","core/Core/Control.fephp":"<?php\n\nNamespace Core ;\n\nclass Control {\n\n    public function executeControl($control, $pageVars) {\n        \\ISOPHP\\js_core::$console->log('raw control', $control) ;\n        $ucf_control = \\ISOPHP\\core::$php->ucfirst($control);\n        \\ISOPHP\\js_core::$console->log('ucf control', $ucf_control) ;\n        $className = '\\\\Controller\\\\' . $ucf_control.'Controller' ;\n        $controlObject = new $className;\n        return $controlObject->execute($pageVars);\n    }\n\n}","core/Core/Router.fephp":"<?php\n\nNamespace Core;\n\nclass Router {\n\n    private\t$bootstrapParams;\n    private\t$route;\n    private $availableRoutes = array() ;\n\n    public function run($bootstrapParams) {\n\n        \\ISOPHP\\js_core::$console->log('Running router with the following') ;\n        \\ISOPHP\\js_core::$console->log($bootstrapParams) ;\n\n        $this->bootstrapParams = $bootstrapParams;\n        $this->setCurrentRoute();\n        \\ISOPHP\\js_core::$console->log('route is:', $this->route) ;\n        return $this->route ;\n    }\n\n    private function setCurrentRoute() {\n        $this->getAvailableRoutes();\n        \\ISOPHP\\js_core::$console->log('Router 1') ;\n\n//        $defaultRoute = $this->getDefaultRoute();\n        $this->parseControllerAliases();\n        \\ISOPHP\\js_core::$console->log('Router 2') ;\n        $this->setRouteController();\n        \\ISOPHP\\js_core::$console->log('Router 3') ;\n//        if ($this->route != $defaultRoute ) {\n//            $this->setRouteAction();\n//            $this->setRouteExtraParams(); }\n    }\n\n    private function getAvailableRoutes() {\n//      $allInfoObjects = \\Core\\AutoLoader::getInfoObjects() ;\n//      $all_processed_arrays = array();\n//      foreach ($allInfoObjects as $infoObject) {\n//        $curKeys = array_keys($infoObject->routesAvailable());\n//        $routesAvailable = $infoObject->routesAvailable();\n//        foreach ($curKeys as $curKey) {\n//          if (isset($all_processed_arrays[$curKey]) ) {\n//            $curValues = $all_processed_arrays[$curKey];\n//            $all_processed_arrays[$curKey] = array_merge($curValues, $routesAvailable[$curKey] ); }\n//          else {\n//            $all_processed_arrays[$curKey] = $routesAvailable[$curKey]; } } }\n      $this->availableRoutes = array(\"Index\" => array(\"index\"), \"LandingPage\" => array(\"show\"));\n    }\n\n    private function getDefaultRoute() {\n      $this->setDefaultRouteExtraParams() ;\n      return array( \"control\" => \"Index\" , \"action\" => \"index\", \"extraParams\" => $this->route[\"extraParams\"] );\n    }\n\n    private function parseControllerAliases() {\n//      $allInfoObjects = \\Core\\AutoLoader::getInfoObjects() ;\n      $aliases = array();\n//      foreach ($allInfoObjects as $infoObject) {\n//        $aliases = array_merge( $aliases, $infoObject->routeAliases() ); }\n      if (isset($this->bootstrapParams[1])) {\n        if (\\ISOPHP\\core::$php->array_key_exists($this->bootstrapParams[1], $aliases)) {\n          $this->bootstrapParams[1] = strtr($this->bootstrapParams[1], $aliases); } }\n    }\n\n    private function setRouteController() {\n\n        \\ISOPHP\\js_core::$console->log('BSP 1', $this->bootstrapParams[1]) ;\n        if (isset($this->bootstrapParams[1])) {\n            \\ISOPHP\\js_core::$console->log('AKE 1',  $this->availableRoutes ) ;\n            \\ISOPHP\\js_core::$console->log('AKE 2',  $this->availableRoutes, \\ISOPHP\\core::$php->array_key_exists( $this->bootstrapParams[1], $this->availableRoutes )) ;\n            if (\\ISOPHP\\core::$php->array_key_exists( $this->bootstrapParams[1], $this->availableRoutes )) {\n                $this->route[\"control\"] = $this->bootstrapParams[1] ;\n            } else {\n                $this->route = $this->getDefaultRoute();\n            }\n        }\n        else {\n            $this->route = $this->getDefaultRoute();\n        }\n\n    }\n\n    private function setRouteAction() {\n        $actionSet = isset($this->bootstrapParams[2]) ;\n        if ($actionSet) {\n            $correctAct = \\ISOPHP\\core::$php->in_array( $this->bootstrapParams[2], $this->availableRoutes[$this->bootstrapParams[1]] ) ;\n        } else {\n            $correctAct = false ;\n        }\n        if ($actionSet && $correctAct) {\n            $this->route[\"action\"] = $this->bootstrapParams[2] ;\n        } else {\n            $this->route[\"action\"] = $this->route = $this->getDefaultRoute();\n        }\n    }\n\n    private function setRouteExtraParams() {\n        $this->route[\"extraParams\"] = array();\n        $numberOfExtraParams = \\ISOPHP\\core::$php->count($this->bootstrapParams)-3;\n        for ($i=3; $i<($numberOfExtraParams+3); $i++) {\n            $this->route[\"extraParams\"][] = $this->bootstrapParams[$i] ;}\n    }\n\n    private function setDefaultRouteExtraParams() {\n        $this->route[\"extraParams\"] = array();\n        $numberOfExtraParams = \\ISOPHP\\core::$php->count($this->bootstrapParams)-1;\n        for ($i=1; $i<($numberOfExtraParams+1); $i++) {\n            $this->route[\"extraParams\"][] = $this->bootstrapParams[$i] ;}\n    }\n\n}","core/Core/View.fephp":"<?php\n\nNamespace Core;\n\nuse ISOPHP\\core;\n\nclass View {\n\n    public static $page_vars ;\n    public static $view_file_name ;\n    public static $template ;\n\n    public function executeView($module, $view, Array $viewVars) {\n        $ep = (isset($viewVars[\"route\"][\"extraParams\"])) ? $viewVars[\"route\"][\"extraParams\"] : array() ;\n        $baseMod = new \\Model\\Base($ep) ;\n        $viewVars[\"params\"] = $baseMod->params ;\n        $vvLayoutCond1 = (isset($viewVars[\"params\"][\"output-format\"])\n            && $viewVars[\"params\"][\"output-format\"] == \"HTML\") ;\n        $vvLayoutCond2 = (isset($viewVars[\"params\"][\"output-format\"])\n            && $viewVars[\"params\"][\"output-format\"] != \"cli\"\n            && $viewVars[\"params\"][\"output-format\"] != \"HTML\") ;\n        if (!isset($viewVars[\"layout\"])) {\n            if ($vvLayoutCond1) { $viewVars[\"layout\"] = \"DefaultHTML\" ; }\n            else if ($vvLayoutCond2) { $viewVars[\"layout\"] = \"blank\" ; }\n            else { $viewVars[\"layout\"] = \"blank\" ; } }\n        $templateData = $this->loadTemplate ($module, $view, $viewVars) ;\n        $this->display($templateData) ;\n    }\n\n    protected function display($templateData) {\n        \\ISOPHP\\js_core::$console->log('Default Display Method', $templateData) ;\n    }\n\n    public function loadTemplate ($module, $view, Array $pageVars) {\n        $viewFileName = \\ISOPHP\\core::$php->ucfirst($view)  ;\n        $lvf = $this->loadViewFile($module, $viewFileName, $pageVars) ;\n        \\ISOPHP\\js_core::$console->log('Template loaded', $lvf) ;\n        if ($lvf !== false) {\n            return $lvf; }\n        else {\n            // @todo no! dont die\n            die (\"View Template $viewFileName in module $module Not Found\\n\"); }\n    }\n\n    public function loadViewFile($module, $viewFileName, $pageVars, $templateData=null) {\n        \\ISOPHP\\js_core::$console->log('ViewFN', $viewFileName) ;\n        self::$view_file_name = $viewFileName;\n         \\ISOPHP\\js_core::$console->log('View PageVars', $pageVars, $module, \\ISOPHP\\js_core::$window->location->hostname) ;\n        self::$page_vars = $pageVars;\n\n        $view_client_path = '/app/'.$module.'/View/'.CURRENT_TARGET.'/'.$viewFileName ;\n        $view_default_path = '/app/'.$module.'/View/'.$viewFileName ;\n\n        if ($this->templateExists($view_client_path) === true) {\n            include($view_client_path) ;\n            return true ;\n        } else if ($this->templateExists($view_default_path) === true) {\n            include($view_default_path) ;\n            return true ;\n        } else {\n            \\ISOPHP\\js_core::$console->log(\"Unable to find view template $view_client_path or default $view_default_path\") ;\n            return false ;\n        }\n    }\n\n    public function templateExists($path) {\n        $php = \\ISOPHP\\core::$php ;\n        if ($php->in_array($path, \\ISOPHP\\core::$file_index)){\n            return true ;\n        }\n        if ($php->substr($path, 0, 1) === '/') {\n            $noprefix = $php->substr($path, 1) ;\n            if ($php->in_array($noprefix, \\ISOPHP\\core::$file_index)){\n                return true ;\n            }\n        }\n        return false ;\n    }\n\n}","core/Core/Base/Controller/Base.fephp":"<?php\n\nNamespace Controller ;\n\nclass Base {\n\n  public $content;\n  protected $registeredModels = array();\n\n  public function __construct() {\n    $this->content = array();\n  }\n\n}","core/Core/Base/Controller/Result.fephp":"<?php\n\nNamespace Controller ;\n\nclass Result {\n\n  public $page;\n  public $view;\n  public $control;\n  public $type;\n  public $view_control;\n  public $post_template = array();\n\n}","core/Core/Base/Info/Base.fephp":"<?php\n\nNamespace Info;\n\nclass Base {\n\n    public $hidden ;\n\n    public $name ;\n\n    public function __construct() {\n    }\n\n    // PTConfigureBase specifies these\n    public function routesAvailable() {\n        return array();\n    }\n\n    public function routeAliases() {\n        return array();\n    }\n\n    public function dependencies() {\n        return array();\n    }\n\n    public function groups() {\n        return array();\n    }\n\n    public function helpDefinition() {\n      $help = <<<\"HELPDATA\"\n  There is no help defined for this module\nHELPDATA;\n      return $help ;\n    }\n\n}","core/Core/Base/Model/Base.fephp":"<?php\n\nNamespace Model;\n\nclass Base {\n\n    public $params ;\n\n    protected function stripNewLines($inputLine) {\n        $inputLine = str_replace(\"\\n\", \"\", $inputLine);\n        $inputLine = str_replace(\"\\r\", \"\", $inputLine);\n        return $inputLine;\n    }\n\n    public function ensureTrailingSlash($str) {\n        if (substr($str, -1, 1) != DIRECTORY_SEPARATOR) {\n            $str = $str . DIRECTORY_SEPARATOR ;\n        }\n        return $str ;\n    }\n\n\n}\n","core/Core/Base/Model/Navigate.fephp":"<?php\n\nnamespace Model;\n\nclass Navigate {\n\n    public function route($control = null, $action = null) {\n\n        \\ISOPHP\\js_core::$console->log('In the applications navigation method') ;\n        \\ISOPHP\\js_core::$console->log($_REQUEST, $_SERVER, $control, $action) ;\n\n        $route_set[] = isset($control) ;\n        $route_set[] = isset($action) ;\n\n        if ( \\ISOPHP\\core::$php->in_array(false, $route_set) ) {\n            $control = \"Index\" ;\n            $action = \"index\" ; }\n\n        if (!isset($_REQUEST['output-format'])) {\n            $_REQUEST['output-format'] = \"HTML\"; }\n\n        $cleo_vars = array();\n        $cleo_vars[0] = __FILE__;\n        $cleo_vars[1] = $control;\n        $cleo_vars[2] = $action;\n        foreach($_REQUEST as $post_key => $post_var) {\n            if (!\\ISOPHP\\core::$php->in_array($post_key, array('control', 'action'))) {\n                $cleo_vars[] = \"--$post_key=$_REQUEST[$post_key]\" ; } }\n        $_ENV['bootstrap'] = \\ISOPHP\\core::$php->serialize($cleo_vars);\n\n        \\ISOPHP\\js_core::$console->log($cleo_vars, $_ENV) ;\n\n        $argv_or_null = null ;\n        $bootStrapParams = (isset($_ENV['bootstrap'])) ? \\ISOPHP\\core::$php->unserialize($_ENV['bootstrap']) : $argv_or_null ;\n        \\ISOPHP\\core::$bootstrap->main($bootStrapParams);\n\n    }\n    \n}"};